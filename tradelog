#!/bin/sh
export POSIXLY_CORRECT=yes
export LC_NUMERIC=en_us.UTF-8

COMMAND=""
LOG_FILES=""
GZ_LOG_FILES=""
READ_INPUT=""
READ_INPUT="" #nogzip files
TICK_FILTER=""
READ_FILTERED=""


##
# Just printi help and exit with code 0
print_help()
{
	echo "Usage: tradelog [-h|--help]"
	echo "...... tradelog [FILTER...] [COMAND] [LOG...]"
	echo ""
	exit 0
}

##
# Check if there is some arguments if no exit 0
argument_controler()
{
	if [ "$#" -eq "0" ];then
		echo "No arguments"
		exit 0
	fi
}

##
# Parse input arguments and COMMANDS 
argument_parser()
{
	while [ "$#" -gt 0 ]; do

		#COMMAND##################
			case "$1" in #COMMANDS THERE CAN BE ONLY ONE 
		list-tick | pos | profit | last-price | hits-ord | graph-pos )
			COMMAND="$1"
			echo "tu "
			shift   #argmunet co našel provede a záhodí a nyní má index číslo 1 argmunet číslo 2 protože se to posune 
			;;
	
		#HELP###############
		-h) 
			print_help
			;;
		
		#FILTERS#################	
		-a) #after DATETIME
			
			shift
			;;
		-b) #before DATETIME
			
			shift
			;;
		-t) #ticker

			shift
			;;

		-w) #width

			WIDTH="$2"
			shift
			shift
			;;
		#LOG#################
		
		*)
			if [ `echo  $1 | grep "\.gz"` ]; then  	#if file ends with .gz
				GZ_LOG_FILES="$1 $G2_LOG_FILES"		
			else
				LOG_FILES="$1 $LOG_FILES"
			fi
			shift
			;;

		esac
		
	done
}


argument_controler $@  # call argument controler and send all the program arguments as funct argument. 
argument_parser $@    # Parse arguments and store them.
#argument_parser()

echo "command: $COMMAND"
echo "gz_l_f:  $GZ_LOG_FILES"
echo "l_f>     $LOG_FILES"

READ_INPUT="gzip -d -c $GZIP | cat $LOG_FILES - | sort"
READ_INPUT="cat $LOG_FILES" #nogzip files
TICK_FILTER=""
READ_FILTERED="eval $READ_INPUT | awk -F ';' 'if (\$1 > $AFTER_TIME && {print \$0}'"

if [ ]; then
	eval "$READ_FILRET_VSTUP | "
fi





